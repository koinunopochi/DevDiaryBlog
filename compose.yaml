services:
  web:
    container_name: "web"
    build:
      dockerfile: "./container/web/Dockerfile"
    ports:
      - "8080:80"
    volumes:
      - "./src/laravel/:/var/www/html"
    depends_on:
      - php
    networks:
      - app-network

  php:
    container_name: "php"
    build:
      dockerfile: "./container/php/Dockerfile"
    volumes:
      - ./src/laravel/:/var/www/html
      - storage-volumes:/var/www/html/storage/framework
      - vendor-volumes:/var/www/html/vendor
    networks:
      - app-network

  db:
    container_name: "db"
    build:
      dockerfile: "./container/db/Dockerfile"
    ports:
      - "3306:3306"
    environment:
      - "MYSQL_ROOT_PASSWORD=password"
      - "MYSQL_DATABASE=database"
      - "MYSQL_USER=laravel"
      - "MYSQL_PASSWORD=password"
    volumes:
      - "./container/db/data:/var/lib/mysql"
    networks:
      - app-network

  # test-db:
  #   container_name: "test-db"
  #   build:
  #     dockerfile: "./container/db/Dockerfile"
  #   ports:
  #     - "3307:3306"  # テスト用のDBは別のポートを使用
  #   environment:
  #     - "MYSQL_ROOT_PASSWORD=password"
  #     - "MYSQL_DATABASE=test_database"
  #     - "MYSQL_USER=test_user"
  #     - "MYSQL_PASSWORD=password"
  #   volumes:
  #     - "./container/db/test-data:/var/lib/mysql"
  #   networks:
  #     - app-network

  minio:
    image: minio/minio:RELEASE.2023-01-06T18-11-18Z
    command: ["server", "/data", "--console-address", ":9090"]
    volumes:
      - "./container/minio/data:/data"
    environment:
      - MINIO_ROOT_USER=minio_root
      - MINIO_ROOT_PASSWORD=minio_password
      - MC_HOST_my_minio=http://minio:9000/ap-northeast-1
    ports:
      - "9000:9000"
      - "9090:9090"
  createbuckets:
    image: minio/mc:RELEASE.2022-12-24T15-21-38Z
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      mc alias set my_minio http://minio:9000 minio_root minio_password;
      mc mb --ignore-existing my_minio/dev-diary-blog;
      "

volumes:
  storage-volumes:
  vendor-volumes:

networks:
  app-network:
    driver: bridge
